import com.android.build.gradle.internal.tasks.FinalizeBundleTask
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id("com.android.application")
    id("org.jetbrains.kotlin.android")
    id("com.google.dagger.hilt.android")
    id("kotlin-parcelize")
    id("com.google.gms.google-services")
    id("kotlin-kapt")
}

def propsFile = rootProject.file('local.properties')
def props = new Properties()
props.load(new FileInputStream(propsFile))

android {
    namespace 'dev.ridill.mym'
    compileSdk 34

    defaultConfig {
        applicationId "dev.ridill.mym"
        minSdk 29
        targetSdk 34
        versionCode 1
        versionName "0.0.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        buildConfigField("String", "GITHUB_REPO_URL", props["githubRepoUrl"])
        buildConfigField("String", "GOOGLE_APIS_BASE_URL", props["googleApisBaseUrl"])
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions = ["scope"]
    productFlavors {
        internal {
            dimension = "scope"
            applicationIdSuffix = ".internal"
            versionCode = 2
            versionName = "1.1.0"
        }

        production {
            dimension = "scope"
            versionCode = 1
            versionName = "0.0.1"
        }
    }

    applicationVariants.configureEach { variant ->
        def artifactName = "MYM-${variant.name}-code${variant.versionCode}-v${variant.versionName}"

        // Rename APKs
        variant.outputs.configureEach {
            outputFileName = "${artifactName}.apk"
        }

        // Rename AABs
        tasks.named("sign${variant.name.capitalize()}Bundle", FinalizeBundleTask) {
            File file = finalBundleFile.asFile.get()
            File finalFile = new File(file.parentFile, "${artifactName}.aab")
            finalBundleFile.set(finalFile)
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }
    buildFeatures {
        compose = true
        buildConfig(true)
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.4.8"
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions.freeCompilerArgs += ["-opt-in=androidx.compose.animation.ExperimentalAnimationApi"]
    kotlinOptions.freeCompilerArgs += ["-opt-in=androidx.compose.foundation.ExperimentalFoundationApi"]
    kotlinOptions.freeCompilerArgs += ["-opt-in=androidx.compose.material3.ExperimentalMaterial3Api"]
    kotlinOptions.freeCompilerArgs += ["-opt-in=androidx.compose.foundation.layout.ExperimentalLayoutApi"]
    kotlinOptions.freeCompilerArgs += ["-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"]
//    kotlinOptions.freeCompilerArgs += ["-opt-in=androidx.compose.material.ExperimentalMaterialApi"]
//    kotlinOptions.freeCompilerArgs += ["-opt-in=androidx.compose.ui.ExperimentalComposeUiApi"]
//    kotlinOptions.freeCompilerArgs += ["-opt-in=com.google.accompanist.pager.ExperimentalPagerApi"]
}

dependencies {
    implementation("androidx.core:core-ktx:1.10.1")
    implementation platform('org.jetbrains.kotlin:kotlin-bom:1.9.0')
    implementation("androidx.activity:activity-compose:1.7.2")
    testImplementation("junit:junit:4.13.2")
    androidTestImplementation("androidx.test.ext:junit:1.1.5")
    androidTestImplementation("androidx.test.espresso:espresso-core:3.5.1")

    // Jetpack Compose
    implementation platform('androidx.compose:compose-bom:2023.08.00')
    implementation("androidx.compose.ui:ui")
    implementation("androidx.compose.ui:ui-graphics")
    implementation("androidx.compose.ui:ui-tooling-preview")
    implementation("androidx.compose.material3:material3")
    implementation("androidx.compose.material:material-icons-extended")
    implementation("androidx.compose.animation:animation")

    androidTestImplementation platform('androidx.compose:compose-bom:2023.08.00')
    androidTestImplementation("androidx.compose.ui:ui-test-junit4")
    debugImplementation("androidx.compose.ui:ui-tooling")
    debugImplementation("androidx.compose.ui:ui-test-manifest")

    // Lifecycle Components
    def lifecycle_version = '2.6.1'
    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-runtime-compose:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")

    // Compose Navigation
    implementation('androidx.navigation:navigation-compose:2.7.0')

    // Dagger Hilt
    def hilt_version = "2.47"
    implementation("com.google.dagger:hilt-android:$hilt_version")
    kapt("com.google.dagger:hilt-android-compiler:$hilt_version")
    implementation("androidx.hilt:hilt-navigation-compose:1.0.0")

    def room_version = "2.5.2"
    implementation("androidx.room:room-runtime:$room_version")
    implementation("androidx.room:room-ktx:$room_version")
    kapt("androidx.room:room-compiler:$room_version")

    // Preferences DataStore
    implementation("androidx.datastore:datastore-preferences:1.0.0")

    // Lottie
    implementation("com.airbnb.android:lottie-compose:6.1.0")

    // Kotlin Combine Tuple
    implementation("com.github.Zhuinden:flow-combinetuple-kt:1.2.0")

    // Firebase
    implementation(platform('com.google.firebase:firebase-bom:32.2.2'))
    implementation("com.google.firebase:firebase-analytics-ktx")
    implementation("com.google.firebase:firebase-appdistribution-api-ktx:16.0.0-beta10")
    internalImplementation("com.google.firebase:firebase-appdistribution:16.0.0-beta10")

    // KEval Arithmetic Expression Evaluator
    implementation("com.notkamui.libs:keval:0.9.0")

    // Work Manager
    def work_version = "2.8.1"
    implementation("androidx.work:work-runtime-ktx:$work_version")
    implementation("androidx.hilt:hilt-work:1.0.0")
    kapt("androidx.hilt:hilt-compiler:1.0.0")

    // Retrofit
    def retrofit_version = "2.9.0"
    implementation("com.squareup.retrofit2:retrofit:$retrofit_version")
    implementation("com.squareup.retrofit2:converter-gson:$retrofit_version")
    implementation("com.squareup.okhttp3:logging-interceptor:4.7.2")

    // Google Cloud Services
    implementation("com.google.android.gms:play-services-auth:20.6.0")
//    implementation 'com.google.api-client:google-api-client:2.0.0'
//    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.34.1'
//    implementation 'com.google.apis:google-api-services-drive:v3-rev20220815-2.0.0'

//    implementation "com.google.guava:guava:24.1-jre"
// Guava fix
    implementation "com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava"
    implementation('com.google.api-client:google-api-client-android:1.26.0') {
        exclude group: 'org.apache.httpcomponents'
        exclude module: 'guava-jdk5'
    }
    implementation('com.google.apis:google-api-services-drive:v3-rev136-1.25.0') {
        exclude group: 'org.apache.httpcomponents'
        exclude module: 'guava-jdk5'
    }
}

kapt {
    correctErrorTypes = true
}